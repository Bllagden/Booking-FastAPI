[project]
name = ""
version = ""
description = ""
authors = [
    {name = "Bllagden", email = "bllagden99@gmail.com"},
]
requires-python = ">=3.11"
readme = "README.md"
license = {text = "MIT"}

dependencies = [
    "fastapi[uvicorn]>=0.108.0",
    "uvicorn>=0.25.0",
    "sqlalchemy>=2.0.23",
    "asyncpg>=0.29.0",
    "alembic>=1.13.1",
    "passlib[bcrypt]>=1.7.4",
    "python-jose[cryptography]>=3.3.0",
    "fastapi-cache2[redis]>=0.2.1",
    "sqladmin>=0.16.0",
    "itsdangerous>=2.1.2",
    "gunicorn>=21.2.0",
    "celery>=5.3.6",
    "python-json-logger>=2.0.7",
    "pydantic[email]>=2.6.1",
    "pydantic-settings>=2.1.0",
]

[project.optional-dependencies]
celery = [
    "celery>=5.3.6",
    "flower>=2.0.1",
    "redis>=4.6.0",
    "pydantic[email]>=2.6.1",
    "pydantic-settings>=2.1.0",
]

[tool.pdm.dev-dependencies]
dev = [
    "ruff>=0.1.5",
    "black>=23.11.0",
    "isort>=5.12.0",
    "pytest>=7.4.3",
    "pytest-dotenv>=0.5.2",
    "pytest-asyncio>=0.23.3",
    "httpx>=0.26.0",
]

[tool.pytest.ini_options]
pythonpath = "src"
asyncio_mode = "auto"
env_files = [
    ".env.test",
]

[tool.isort]
profile = "black"

[tool.ruff]
fixable = [
  "F",
  "E",
  "W",
  "I",
  "COM",
  "UP",
  "RUF",
]
ignore = [
  "E501", # Line Length
  "A003", # Class attribute ... is shadowing a python builtin
  "ANN101",
  "ANN102",
  "D", # pydocstyle
  "INP",
  "TCH001",
  "TCH002",
  "TCH003",
  "RUF001",
  "RUF002",
  "RUF003",
  "RUF012",
  "RUF200",
  "ERA001",
  "TID252",
  "PLR0913",
]
select = ["ALL"]
src = ["src", "tests"]

[tool.ruff.per-file-ignores]
"src/alembic/*" = ["UP007"]
"src/logger.py" = ["ANN001", "UP008"]
"tests/*" = [
  "S101",
  "PT006", # Wrong name(s) type in `@pytest.mark.parametrize`, expected `tuple`
  "S311",
]

[tool.pdm.scripts]
lint_src = {composite = [
  "ruff check ./src --fix --show-fixes",
  "black ./src",
  "ruff check ./src --fix --show-fixes",
  "alembic check",
]}
